name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Install backend dependencies
      run: |
        cd mock_backend
        pip install -r requirements.txt
        
    - name: Install Playwright
      run: npx playwright install --with-deps
      
    - name: Initialize database
      run: |
        cd mock_backend
        python init_database.py
        
    - name: Start backend server
      run: |
        cd mock_backend
        python app.py &
        sleep 5
        
    - name: Start frontend server
      run: |
        cd frontend
        npm run build
        npm start &
        sleep 10
        
    - name: Wait for servers
      run: |
        timeout 30 bash -c 'until curl -s http://localhost:3000; do sleep 1; done'
        timeout 30 bash -c 'until curl -s http://localhost:3001/health; do sleep 1; done'
        
    - name: Run E2E tests
      run: npx playwright test
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
        
    - name: Upload test results on success
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: playwright-report-success
        path: playwright-report/
        retention-days: 7
