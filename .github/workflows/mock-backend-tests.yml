name: Mock Backend Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'mock_backend/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'mock_backend/**'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11, 3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('mock_backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      working-directory: ./mock_backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-html pytest-json-report

    - name: Set up database
      working-directory: ./mock_backend
      run: |
        python init_database.py

    - name: Run unit tests with pytest
      working-directory: ./mock_backend
      run: |
        pytest tests/ \
          --cov=. \
          --cov-report=xml \
          --cov-report=html \
          --cov-report=term-missing \
          --html=reports/report.html \
          --self-contained-html \
          --json-report \
          --json-report-file=reports/report.json \
          -v

    - name: Upload coverage reports to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./mock_backend/coverage.xml
        directory: ./mock_backend
        fail_ci_if_error: false

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-python-${{ matrix.python-version }}
        path: |
          mock_backend/reports/
          mock_backend/htmlcov/
          mock_backend/coverage.xml

    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always() && matrix.python-version == '3.11'
      with:
        files: mock_backend/reports/report.json
        check_name: "Mock Backend Test Results"
        comment_title: "Mock Backend Test Results"

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy

    - name: Run Black (code formatter)
      working-directory: ./mock_backend
      run: black --check --diff .

    - name: Run isort (import sorter)
      working-directory: ./mock_backend
      run: isort --check-only --diff .

    - name: Run flake8 (linter)
      working-directory: ./mock_backend
      run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: Run mypy (type checker)
      working-directory: ./mock_backend
      run: mypy . --ignore-missing-imports || true

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install security scanning dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run Bandit security linter
      working-directory: ./mock_backend
      run: bandit -r . -f json -o bandit-report.json || true

    - name: Run Safety security checker
      working-directory: ./mock_backend
      run: safety check --json --output safety-report.json || true

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          mock_backend/bandit-report.json
          mock_backend/safety-report.json
